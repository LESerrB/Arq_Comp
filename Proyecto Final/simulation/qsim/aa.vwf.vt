// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/13/2017 20:02:11"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          PF
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module PF_vlg_vec_tst();
// constants                                           
// general purpose registers
reg nIRQ;
reg reloj;
reg reset;
// wires                                               
wire [7:0] A_out;
wire [7:0] B_out;
wire [7:0] data_out_X0;
wire [15:0] Dir;
wire [7:0] e_presente_out;
wire [7:0] Leds;
wire [7:0] retro;
wire S1Izq;
wire S2Der;

// assign statements (if any)                          
PF i1 (
// port map - connection between master ports and signals/registers   
	.A_out(A_out),
	.B_out(B_out),
	.data_out_X0(data_out_X0),
	.Dir(Dir),
	.e_presente_out(e_presente_out),
	.Leds(Leds),
	.nIRQ(nIRQ),
	.reloj(reloj),
	.reset(reset),
	.retro(retro),
	.S1Izq(S1Izq),
	.S2Der(S2Der)
);
initial 
begin 
#1000000 $finish;
end 

// nIRQ
initial
begin
	nIRQ = 1'b1;
end 

// reloj
always
begin
	reloj = 1'b0;
	reloj = #5000 1'b1;
	#5000;
end 

// reset
initial
begin
	reset = 1'b1;
end 
endmodule

